<?xml version="1.0" encoding="UTF-8"?>

<!-- 
  
  Copyright (C) <%= new Date().getFullYear() %> Akana Inc.

  Author: <%= props.author %> (<%= props.email %>)

  Spring definition for the logging handler OSGi integration.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  							http://www.springframework.org/schema/beans/spring-beans.xsd
  							http://www.springframework.org/schema/osgi
  							http://www.springframework.org/schema/osgi/spring-osgi.xsd">
	


	<!-- Publishes the WS-Policy handler to the policy framework. The properties that should be included are
		name: Unique name of the handler factory
		scope: "abstract" (normalized messages for all services) or "concrete" (only a specific binding like SOAP)
		binding: used if scope is "concrete" to identify the binding type to apply to, i.e., "soap", "http", "pox"
		role: "consumer" (outgoing calls to downstream service) or "provider" (incoming calls to virtual service)
		
		This first service publishes the factory to the http binding for incoming REST messages.
	-->
	
    <!-- Publishes the same factory to the soap binding for outgoing SOAP messages. -->

	<osgi:service ref="<%= props.handlerPackage %>.factory" interface="com.soa.policy.wspolicy.handler.WSPHandlerFactory">
		<osgi:service-properties>
			<entry key="name" value="<%= props.handlerPackage %>.factory"/>
			<entry key="scope" value="abstract"/>
			<entry key="role" value="provider"/>
			<!--entry key="binding" value="http"/-->
			<!-- entry key="after" value="*"/-->   
		</osgi:service-properties>
		
	</osgi:service>	
	
	<bean id="<%= props.handlerPackage %>.factory" class="<%= props.handlerPackage %>.<%= props.component %>MessageHandlerFactory"/>

	<!-- publish the complex policy template. An id property needs to be included that matches the template id -->
	<osgi:service ref="<%= props.templatePackage %>" interface="com.soa.policy.template.OperationalPolicyTemplate">
		<osgi:service-properties>
			<entry key="name" value="<%= props.templatePackage %>"/>
			<entry key="id" value="policy.<%= props.component.toLowerCase() %>"/>
		</osgi:service-properties>
	</osgi:service>

	<!-- Complex assertion QName -->
	<bean id="<%= props.assertionPackage %>" class="javax.xml.namespace.QName">
        <constructor-arg value="urn:<%= props.namespace %>" />
        <constructor-arg value="<%= props.component.toLowerCase() %>"/>
    </bean>

	<!-- Complex policy template -->
	<bean id="<%= props.templatePackage %>" class="<%= props.templatePackage %>.<%= props.component %>Template"/>


    <!-- internal complex policy jaxb assertion marshaller, not published since no sub-policies -->
    <bean id="<%= props.component.toLowerCase() %>.jaxb.marshaller" class="com.soa.policy.wspolicy.JaxbAssertionMarshaller"  init-method="init">
    	<property name="assertionQNames">
			<list>
				<ref bean="<%= props.assertionPackage %>"/>
			</list>
		</property>
		<property name="jaxbPaths">
			<list>
				<value>com.akana.demo.policy.bean</value>
			</list>
		</property>
	</bean>

 	<!-- publish the complex marshaller -->
	<osgi:service ref="<%= props.marshallerPackage %>" interface="com.soa.policy.wspolicy.AssertionMarshaller">
		<osgi:service-properties>
			<entry key="name" value="<%= props.marshallerPackage %>"/>
		</osgi:service-properties>	
	</osgi:service>

	<!-- complex master/parent policy marshaller -->
    <bean id="<%= props.marshallerPackage %>" class="<%= props.marshallerPackage %>.<%= props.component %>AssertionMarshaller">
        <property name="jaxbMarshaller" ref="<%= props.component.toLowerCase() %>.jaxb.marshaller"/>
    </bean>

</beans>
